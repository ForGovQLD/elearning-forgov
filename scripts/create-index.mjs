import { readdir, writeFile } from 'fs/promises';
import path from 'path';

const TARGET_FILE_NAME = 'index.html';
const OUTPUT_FILE = path.resolve('./index.html');

async function findIndexFiles(directory, baseDirectory = directory) {
  const filesAndDirectories = await readdir(directory, { withFileTypes: true });
  const files = filesAndDirectories
    .filter((dirent) => dirent.isFile() && dirent.name === TARGET_FILE_NAME)
    .map((dirent) => path.join(directory, dirent.name));

  // If TARGET_FILE_NAME is found in this directory, stop recursion here
  if (files.length > 0) {
    return files;
  }

  const directories = filesAndDirectories.filter((dirent) => dirent.isDirectory());
  let allFiles = [];

  for await (const dirent of directories) {
    const nestedFiles = await findIndexFiles(path.join(directory, dirent.name), baseDirectory);
    allFiles.push(...nestedFiles);
  }

  return allFiles;
}

async function createIndexHtmlWithLinks(files, outputFile) {
  const links = files.map((file) => {
    const relativePath = path.relative(path.resolve('./'), file),
      moduleName = relativePath.split(path.sep)[1].replaceAll('_',' '); // Calculate the relative path from the script's running directory to the file
    return `<li><a href="${relativePath}" target="_blank">${moduleName}</a></li>`;
  });

  const htmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>ForGov eLearning modules</title>
</head>
<body>
<h1>ForGov eLearning modules</h1>
<ul>
${links.join('\n')}
</ul>
</body>
</html>
`;

  await writeFile(outputFile, htmlContent);
  console.log(`The list of index.html files has been written to ${OUTPUT_FILE}`);
}

// You can call the function and pass the directory you want to search.
const directoryPath = path.resolve('./modules'); // Replace './' with the path to the directory you want to search

// Execute the function and output the result
findIndexFiles(directoryPath)
  .then((files) => {
    if (files.length) {
      return createIndexHtmlWithLinks(files, OUTPUT_FILE);
    } else {
      console.log('No index.html files found.');
    }
  })
  .catch((error) => {
    console.error('Error occurred:', error);
  });

// javascript code generated by QChat
